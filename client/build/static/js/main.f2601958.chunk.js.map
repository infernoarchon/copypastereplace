{"version":3,"sources":["logo.svg","utils/API.js","components/Form/index.js","pages/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","require","config","API","getBooks","axios","get","searchBooks","query","process","REACT_APP_API_KEY","getBook","id","deleteBook","delete","saveBook","bookData","post","sendText","text","REACT_APP_GOOGLE_API_KEY","document","features","extractSyntax","extractEntities","encodingType","Input","props","react_default","a","createElement","Object","assign","type","className","TextArea","rows","cols","FormBtn","value","children","Word","content","number","label","help","word","classCallCheck","this","Home","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","stories","inputs","data","showTextArea","words","getWords","token","masterObj","forEach","d","filter","o","dependencyEdge","e","helpText","partOfSpeech","proper","tag","lemma","push","indexOf","setState","console","log","joinWords","list","storyStr","stripText","g","f","includes","targetIndex","h","joinedStr","join","replace","handleFormSubmit","event","preventDefault","synopsis","then","response","entities","tok","tokens","randomizeInputs","getElementById","firstChild","focus","handleWordSubmit","handleInputChange","_event$target","target","name","defineProperty","handleKeyPress","key","getStory","textContent","inputcontainer","querySelector","i","appendChild","Math","random","handleKeyDownInput","bind","assertThisInitialized","_this2","targetName","stripWords","innerHTML","nextSibling","remove","_this3","placeholder","onChange","disabled","onClick","map","input","onKeyDown","Component","App","BrowserRouter","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","URL","origin","addEventListener","fetch","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f2601958.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import axios from \"axios\";\nrequire('dotenv').config()\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  searchBooks: function(query) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query+ \"&key=\" + process.env.REACT_APP_API_KEY);\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n  sendText: function(text) {\n    return axios.post(\"https://language.googleapis.com/v1/documents:annotateText?key=\" + process.env.REACT_APP_GOOGLE_API_KEY, {\n      document: text.document,\n      features: { extractSyntax: true, extractEntities: true },\n      encodingType: \"UTF8\"\n    })\n  }\n\n};\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n      <input type=\"text\" className=\"form-control mb-2\" {...props} />\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"10\" cols=\"100\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <div className=\"input-group-append\">\n      <button type=\"submit\" value=\"Submit\" {...props} className=\"btn btn-primary\">\n        {props.children}\n      </button>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { isDate } from \"util\";\n\nclass Word {\n  constructor(content, number, label, help, word) {\n    this.content=content;\n    this.number=number;\n    this.label=label;\n    this.word=word;\n    this.help=help;\n  }\n}\n\nclass Home extends Component {\n  state = {\n    stories: [],\n    inputs: [],\n    data: [],\n    showTextArea: true,\n    words: []\n  };\n  constructor(...args) {\n    super(...args);\n    this.handleKeyDownInput = this.handleKeyDownInput.bind(this);\n  }\n  \n  handleKeyDownInput(event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      let targetName = event.target.name\n      this.state.inputs.forEach(h => {\n        if(h.number == targetName) {\n          h.word = event.target.value\n          // storyStr.push(h.word)\n        } else{\n          return\n        }\n        })\n        let stripWords=[]\n        this.state.inputs.forEach(h => {\n          if(h.word) {\n          stripWords.push(h.word)\n          this.setState({words: this.state.words+1})\n          } else{\n            return\n          }\n        })\n        console.log(stripWords)\n      if(this.state.inputs.length === stripWords.length) {\n        document.getElementById(\"input-container\").innerHTML = ''\n        document.getElementById(\"counter\").innerHTML = ''\n        this.getStory()\n      } else{\n      event.target.nextSibling.focus();\n      document.getElementById(\"input-container\").firstChild.remove()\n      }\n    }\n  }\n    getWords = token => {\n      let masterObj = [];\n      const wordTypes =[\"VMOD\",\"DOBJ\",\"POBJ\",\"AMOD\",\"NN\",\"RCMOD\",\"APPO\",\"NSUBJ\",\"XCOMP\"]\n      wordTypes.forEach(d => {\n        let filteredArr = token.filter(function(o) {\n          return o.dependencyEdge.label === d\n        })\n        filteredArr.forEach(e => {\n          let helpText;\n          if(e.partOfSpeech.proper === \"PROPER\" || e.partOfSpeech.tag === \"PRON\" || e.partOfSpeech.tag === \"NUM\" || e.lemma === \"be\") {\n            return\n          } else{\n            switch(e.dependencyEdge.label) {\n              case \"VMOD\":\n                helpText=\"Enter a verb that modifies a noun (e.g. shag, disgusted)...\"\n                break;\n              case \"DOBJ\":\n                if(e.partOfSpeech.number === \"PLURAL\")\n                  {helpText=\"Enter a plural noun...\"} \n                else \n                  {helpText=\"Enter a noun...\"}\n                break;\n              case \"POBJ\":\n                if(e.partOfSpeech.number === \"PLURAL\")\n                  {helpText=\"Enter a plural noun...\"} \n                else \n                  {helpText=\"Enter a noun...\"}\n                break;\n              case \"AMOD\":\n                helpText=\"Enter an adjective...\"\n                break;\n              case \"NN\":\n                helpText=\"Enter a noun you would use to describe something... e.g. gold, leather, office\"\n                break;\n              case \"RCMOD\":\n                helpText=\"Enter a verb relative clause modifier (e.g. kills, sleeps with)...\"\n                break;\n              case \"APPO\":\n                  if(e.partOfSpeech.number === \"PLURAL\")\n                    {helpText=\"Enter a plural noun...\"} \n                  else \n                    {helpText=\"Enter a noun...\"}\n                break;\n              case \"NSUBJ\":\n                  if(e.partOfSpeech.number === \"PLURAL\")\n                    {helpText=\"Enter a plural noun...\"} \n                  else \n                    {helpText=\"Enter a noun...\"}\n                break;\n              case \"XCOMP\":\n                helpText=\"Enter a verb clausal complement (e.g. kidnap, ride)...\"\n                break;\n            }\n            masterObj.push(new Word(e.text.content,token.indexOf(e),e.dependencyEdge.label, helpText))\n          }\n        })\n      })\n      // var masterUnique = Array.from(new Set(masterList))\n      this.setState({inputs: masterObj})\n      console.log(this.state.inputs)\n      return masterObj\n    }\n\n    joinWords = (token,list) => {\n      let storyStr = []\n      let stripText = []\n      list.forEach(g => {\n        stripText.push(g.content)\n      })\n      token.forEach(f => {\n        if(stripText.includes(f.text.content)) {\n          let targetWord;\n          let targetIndex = token.indexOf(f)\n          list.forEach(h => {\n            if(h.number === targetIndex) {\n              storyStr.push(h.word)\n            } else{\n              return\n            }\n          })\n        } else{\n          storyStr.push(f.text.content)\n        }\n      })\n      let joinedStr = storyStr.join(' ')\n      joinedStr = joinedStr.replace(/\\s+(\\W)/g,\"$1\");\n      joinedStr = joinedStr.replace(/-\\s/g,\"-\");\n      return joinedStr\n    }\n\n    handleFormSubmit = event => {\n      event.preventDefault()\n        API.sendText({\n          document : {\n              type: \"PLAIN_TEXT\",\n              content: this.state.synopsis\n          }\n        }).then(response => {\n          const ent = response.data.entities\n          const tok = response.data.tokens\n\n          //Make these a switch case\n          \n          console.log(tok)\n          this.getWords(tok)\n          this.randomizeInputs()\n          document.getElementById(\"input-container\").firstChild.focus()\n          this.setState({data: tok})\n          this.setState({showTextArea: false})\n       \n        })\n      }\n\n      handleWordSubmit = event => {\n        event.preventDefault()\n\n      }\n      \n      handleInputChange = event => {\n        // Pull the name and value properties off of the event.target (the element which triggered the event)\n        const { name, value } = event.target;\n    \n    \n        // Set the state for the appropriate input field\n        this.setState({\n          [name]: value //NOTE: using a variable as a property name would set a new property\n        });\n      };\n\n      handleKeyPress = event => {\n        if(event.key == \"Enter\") {\n          console.log('pressed enter')\n        }\n      }\n      getStory = ()=> {\n        console.log(\"creating story\")\n        console.log(this.state.inputs)\n        document.getElementById(\"story-container\").textContent = this.joinWords(this.state.data, this.state.inputs)\n      }\n      randomizeInputs = () => {\n\n        let inputcontainer = document.querySelector('#input-container');\n        for (var i = inputcontainer.children.length; i >= 0; i--) {\n            inputcontainer.appendChild(inputcontainer.children[Math.random() * i | 0]);\n        }\n      }\n\n    \n    render() {\n    return(\n        <div className=\"container\">\n        <h3>Copy Paste Replace</h3>\n        { !this.state.showTextArea ? <div id=\"counter\">{this.state.words.length}/{this.state.inputs.length}</div> : null }\n            <form>\n            { this.state.showTextArea ?\n                <div>\n              <TextArea name=\"synopsis\" placeholder=\"Paste your story here...\" onChange={this.handleInputChange} />\n              <FormBtn disabled={!this.state.synopsis ? true : false} onClick={this.handleFormSubmit}>Submit Story</FormBtn>\n                </div>\n              : null}\n            </form>\n        <br/>\n        <div id=\"input-container\">\n          {this.state.inputs.map(input => (\n            <Input name={input.number} key={input.number} placeholder={input.help} onChange={this.handleInputChange} onKeyDown={this.handleKeyDownInput} />\n              ))}\n        </div>\n        <div id=\"story-container\"></div>\n        </div>\n    )\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div>\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n        </Switch>\n  \n      </div>\n      </Router>\n  \n  \n  \n    )\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}